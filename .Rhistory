df4$crime <- ifelse(df4$crime %in% c("Negligent manslaughter", "Murder, non-negligent","Justifiable homicide"),
"HOMOCIDE", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Bad checks", "Counterfeiting, forgery", "Credit card, ATM fraud", "Embezzlement", "False pretenses, swindle", "Identify theft", "Impersonation", "Wire fraud", "Bribery", "Welfare fraud", "Extortion, Blackmail"),
"FRAUD", df4$crime)
df4$crime <- ifelse(df4$crime %in% c( "Burglary, Breaking and Entering", "Robbery"),
"ROBBERY/BURGLARY", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Shoplifting", "Theft from building", "Purse-snatching", "Pocket-picking", "Stolen property offenses", "All other larceny", "Stolen property offenses"),
"LARCENY/THEFT", df4$crime)
df4$crime <- ifelse(df4$crime =="Trespass of real property", "TRESPASS", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Hacking/Computer Invasion", "Animal Cruelty", "All other offenses"),
"OTHER", df4$crime)
#table(df4$crime)
# Further combination into violent and non-violent crime types
df4$crime.type <- ifelse(df4$crime %in% c("SEX", "ASSAULT", "HOMICIDE", "VIO", "ROBBERY/BURGLARY"),
"VIO", ifelse(df4$crime %in% c("LARCENY/THEFT", "TRESPASS", "DRUG", "FRAUD", "MVT", "NONVIO"),
"NONVIO", "Other"))
table(df4$crime.type)
qplot(df4$crime, xlab = "Crimes", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes" )
qplot(df4$crime, xlab = "Crimes", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q<-qplot(df4$crime, xlab = "Crimes", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + opts(axis.text.x=theme_text(angle=-90))
q<-qplot(df4$crime, xlab = "Crimes", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q<-qplot(df4$crime, xlab = "Crime Types", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(df$`Offense Count`, df$id, data = df4, geom = "boxplot")
qplot(df$`Offense Count`, df$id, geom = "boxplot")
View(df4)
table(df4$crime.type)
table(df4$crime)
count)df4$crime)
count(df4$crime)
q<-qplot(df4$crime, xlab = "Crime Types", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q<-qplot(df4$crime, xlab = "Crime", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q<-qplot(df4$crime, xlab = "Crime Category", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#boxplots by month
boxplot(df4$`Offense Count`~df4$id,
data=df4,
horizontal=TRUE,
main="Boxplot - Offense Count per Occurrence in Houston, by Month",
xlab="Number of Offenses",
ylab="Month Number, 2019",
col="orange",
border="brown"
)
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
ggparcoord(df4,column:5,groupColumn="crime")
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
ggplot(df4,aes(x=crime.type)) + geom_histogram(binwidth=5000) + ggtitle("Distribution of Crime Types in Houston") + ylab("Percentage)
ggplot(df4,aes(x=crime.type)) + geom_histogram(binwidth=5000) + ggtitle("Distribution of Crime Types in Houston") + ylab("Percentage")
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=9, fig.height=7)
# Creating a vector of packages used within.
packages <- c('readxl',
'lubridate',
'ggplot2',
'tidyverse',
'dplyr')
# Checking for package installations on the system and installing if not found.
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
# Including the packages for use.
for(package in packages){
library(package, character.only = TRUE)
}
table(df4$crime.type)
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=8, fig.height=7)
# Creating a vector of packages used within.
packages <- c('readxl',
'lubridate',
'ggplot2',
'tidyverse',
'dplyr')
# Checking for package installations on the system and installing if not found.
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
# Including the packages for use.
for(package in packages){
library(package, character.only = TRUE)
}
table(df4$crime.type)
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
q<-qplot(df4$crime, xlab = "Crime Category", main ="Crimes in Houston") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
q<-qplot(df4$crime, xlab = "Crime Category", main ="Crimes in Houston, Jan - May 2019") +
scale_y_continuous("Number of crimes")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
table(df4$`NIBRS Description`)
```{r eval=TRUE, include=TRUE, echo=FALSE}
table(df4$`NIBRS Description`)
df4$crime <- as.character(df4$`NIBRS Description`)
df4$crime <- ifelse(df4$`NIBRS Description` %in% c("Pornographs, obscene material", "Prostitution", "Statutory rape", "Purchasing prostitution", "Forcible rape", "Forcible sodomy", "Assisting or promoting prostitution", "Forcible fondling", "Human Trafficking/Commercial Sex Act", "Peeping tom"),
'SEX', df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Motor vehicle theft", "Theft from motor vehicle", "Theft of motor vehicle parts or accessory"),
"MVT", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Family offenses, no violence", "Betting/wagering","Gambling equipment violations","From coin-operated machine or device", "Promoting gambling", "Liquor law violations", "Intimidation","Runaway", "Curfew, loitering, vagrancy violations", "Disorderly conduct", "Driving under the influence", "Drunkenness"),
"NONVIO", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Aggravated Assault", "Simple assault"),
"ASSAULT", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Drug, narcotic violations", "Drug equipment violations"),
"DRUG", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Weapon law violations", "Kidnapping, abduction", "Arson", "Destruction, damage, vandalism"),
"VIO", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Negligent manslaughter", "Murder, non-negligent","Justifiable homicide"),
"HOMOCIDE", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Bad checks", "Counterfeiting, forgery", "Credit card, ATM fraud", "Embezzlement", "False pretenses, swindle", "Identify theft", "Impersonation", "Wire fraud", "Bribery", "Welfare fraud", "Extortion, Blackmail"),
"FRAUD", df4$crime)
df4$crime <- ifelse(df4$crime %in% c( "Burglary, Breaking and Entering", "Robbery"),
"ROBBERY/BURGLARY", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Shoplifting", "Theft from building", "Purse-snatching", "Pocket-picking", "Stolen property offenses", "All other larceny", "Stolen property offenses"),
"LARCENY/THEFT", df4$crime)
df4$crime <- ifelse(df4$crime =="Trespass of real property", "TRESPASS", df4$crime)
df4$crime <- ifelse(df4$crime %in% c("Hacking/Computer Invasion", "Animal Cruelty", "All other offenses"),
"OTHER", df4$crime)
#table(df4$crime)
# Further combination into violent and non-violent crime types
df4$crime.type <- ifelse(df4$crime %in% c("SEX", "ASSAULT", "HOMICIDE", "VIO", "ROBBERY/BURGLARY"),
"VIO", ifelse(df4$crime %in% c("LARCENY/THEFT", "TRESPASS", "DRUG", "FRAUD", "MVT", "NONVIO"),
"NONVIO", "Other"))
table(df4$crime)
class(table(df4$`NIBRS Description`))
count(table(df4$`NIBRS Description`))
crimes<-as data.frame(table(df4$`NIBRS Description`))
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
crimes <- data.frame(table(df4$`NIBRS Description`))
count(crimes$Freq)
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- sum(crimes$Freq)
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- sum(crimes$Freq)
sumcrimes
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
sumcrimes <- sum(crimes$Freq)
sumcrimes
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
sumcrimes <- sum(crimes$Freq)
prettynum(sumcrimes, big.mark = "", )
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
sumcrimes <- sum(crimes$Freq)
prettyNum(sumcrimes, big.mark = "", )
crimes <- data.frame(table(df4$`NIBRS Description`))
crimes
sumcrimes <- sum(crimes$Freq)
prettyNum(sumcrimes, big.mark = ",")
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- format(sum(crimes$Freq), big.mark=",")
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes$crimes <- format(sum(crimes$Freq), big.mark=",")
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes$crimes <- format(sum(crimes$Freq), big.mark=",")
crimes
View(crimes)
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- format(sum(crimes$Freq), big.mark=",")
crimes
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- format(sum(crimes$Freq), big.mark=",")
crimes
crimes <- data.frame(table(df4$`NIBRS Description`))
sumcrimes <- format(sum(crimes$Freq), big.mark=",")
crimes
sumcrimes
crimes2 <- data.frame(table(df4$crime))
sumcrimes2 <- format(sum(crimes2$Freq), big.mark=",")
crimes2
sumcrimes2
sumcrimes
print("The total number of crimes:", sumcrimes2, " ")
print("The total number of crimes:",sumcrimes2, " ")
print("The total number of crimes:",sumcrimes2)
table(df4$crime.type)
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
#table(df4$crime.type)
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
crimetyp<-data.frame(table(df4$crime.type))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
sumcrimetyp <- sum(crimetyp$Freq)
sumcrimetyp
crimetyp
viocrime<-((crimetyp$Var1=="VIO")/sumcrimetyp)
viocrime
viocrime<-((crimetyp$Var1=="VIO")/sumcrimetyp*100)
viocrime
viocrime<-((sum(crimetyp$Var1=="VIO"))/sumcrimetyp*100)
viocrime
crimetyp
viocrime<-((Freq(crimetyp$Var1=="VIO"))/sumcrimetyp*100)
crimetyp
viocrime<-(sum(VIO))
crimetyp
viocrime<-(sum(crimetyp$Var1 == "VIO"))
viocrime
crimetyp
viocrime<-(count(crimetyp$Freq == "VIO"))
crimetyp
viocrime<-crimetyp$Freq(crimetyp$Var1 == "VIO")
viocrime<-integer(crimetyp$Freq(crimetyp$Var1 == "VIO"))
crimetyp<-data.frame(table(df4$crime.type))
crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
sumcrimetyp
crimetyp<-data.frame(table(df4$crime.type))
crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
sumcrimetyp
Perc$crimetyp<-crimetyp
Perc$crimetyp<-crimetyp(crimetyp$Freq/sumcrimetyp)
crimetyp
crimetyp$perc <- ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x))
crimetyp
sumcrimetyp
crimetyp<-data.frame(table(df4$crime.type))
crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
sumcrimetyp
crimetyp$perc <- ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x))
crimetyp
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$perc <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
qplot(df4$crime.type, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Number of crimes")
qplot(crimetyp$perc, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
qplot(crimetyp$perc, xlab = "Crime Type", main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes") + bins=3
qplot(crimetyp$perc, xlab = "Crime Type", binwidth=3, main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
qplot(crimetyp$Freq, xlab = "Crime Type", binwidth=3, main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
crimetyp
qplot(crimetyp$Var1, xlab = "Crime Type", binwidth=3, main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
crimetyp
ggplot(crimetyp, aes(x=Var1, y=perc)) + geom_histogram(bins=3)
ggplot(crimetyp, aes(x=Var1)) + geom_histogram(bins=3)
ggplot(crimetyp, aes(x=perc)) + geom_histogram(bins=3)
crimetyp
ggplot(crimetyp, aes(x=Freq)) + geom_histogram(bins=3)
qplot(crimetyp$Freq, xlab = "Crime Type", binwidth=3, main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
qplot(crimetyp$Var1, xlab = "Crime Type", binwidth=3, main ="Violent vs Non-Violent Crimes in Houston") +
scale_y_continuous("Percent of crimes")
qplot(crimetyp$Var1, xlab = "Crime Type", binwidth=3, stat="count", main ="Violent vs Non-Violent Crimes in Houston") + scale_y_continuous("Percent of crimes")
qplot(crimetyp$Freq, xlab = "Crime Type", binwidth=3, stat="count", main ="Violent vs Non-Violent Crimes in Houston") + scale_y_continuous("Percent of crimes")
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$perc <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
crimetyp$Crime_Type<-crimetyp$Var1
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp$Crime_Type
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
crimetyp$Var1<-crimetyp$Crime_Type
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
View(crimetyp)
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
crimetyp$Crime_Type<-crimetyp
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
#crimetyp
crimetyp$Crime_Type<-crimetyp
crimetyp$Crime_Type<-crimetyp$Var1
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
colnames(crimetyp) <- c("Crime Type","Freq","Percent")
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
crimetyp
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
colnames(crimetyp) <- c("Crime Type","Freq","Percent")
#crimetyp
#crimetyp$Crime_Type<-crimetyp
#crimetyp$Crime_Type<-crimetyp$Var1
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp
crimetyp<-data.frame(table(df4$crime.type))
crimetyp$Percent <- round(ave(crimetyp$Freq, sumcrimetyp, FUN=function(x) 100*x/sum(x)))
colnames(crimetyp) <- c("Crime Type","Freq","Percent")
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp
ggplot(data = crimetyp,aes(x=crime.type)) +
geom_bar(aes(y = (..Freq..)/sum(..Freq..))) +
ylab("Percentage") +
ylim(0,0.4)
ggplot(data = crimetyp,aes(x=Crime Type)) +
ggplot(data = crimetyp,aes(x="Crime Type")) +
geom_bar(aes(y = (..Freq..)/sum(..Freq..))) +
ylab("Percentage") +
ylim(0,0.4)
ggplot(data = crimetyp,aes(x="Crime Type")) +
geom_bar(aes(y = Percent))  +
ylab("Percentage") +
ylim(0,0.4)
ggplot(data = crimetyp,aes(x="Crime Type")) +
geom_bar()  +
ylab("Percentage") +
ylim(0,0.4)
ggplot(data = crimetyp,aes(x="Crime Type")) +
geom_bar() +
ylim(0,100)
barplot(crimetyp, xlab= "Crime Type", ylab="Proportion", ylim=c(0,100))
barplot(crimetyp, xlab= "Crime Type", ylab="Proportion", ylim=c(0,100))
barplot(crimetyp, xlab= "Crime Type", ylab="Proportion", ylim=c(0,100))
barplot(crimetyp, xlab= "Crime Type", ylab="Percentage", ylim=c(0,100))
barplot(crimetyp, xlab= "Crime Type", ylab="Percentage", ylim=c(0,100))
barplot(crimetyp, xlab= "Crime Type", ylab="Frequency", ylim=c(0,100))
crimet
crimetyp
library(doBy)
temp <- summaryBy(CASE.crime ~ Month, data=df4, FUN=length)
library(doBy)
temp <- summaryBy(crime ~ Month, data=df4, FUN=length)
temp <- aggregate(df4$crime, by list(df4$crime, df4$`Occurrence Hour`), FUN=length)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c(“crime”, “occurrench hour”, “count”
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c(“crime”, “occurrench hour”, “count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c(“crime”, “occurrence hour”, “count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c(“crime”, “Occurrence Hour”, “count”)
View(temp)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
colnames(temp) <- c(“crime”, “Occurrence Hour”, “Count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
colnames(temp) <- c("Crime", "Occurrence Hour”, “Count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
colnames(temp) <- c("Crime", "Occurrence Hour”, “Count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour”, “Count”)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=crime, y=Occurrence Hour)) + geom_tile(aes(fill=count)) + scale_x_discrete(“Crime”, expand = c(0,0)) + scale_y_discrete(“Time of day”, expand = c(0,-2)) + scale_fill_gradient(“Number of crimes”, low = “white”, high = “steelblue”) + theme_bw() + ggtitle(“Crimes by time of day”) + theme(panel.grid.major=element_line(colour=NA), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=crime, y=df4$`Occurrence Hour`)) + geom_tile(aes(fill=count)) + scale_x_discrete(“Crime”, expand = c(0,0)) + scale_y_discrete(“Time of day”, expand = c(0,-2)) + scale_fill_gradient(“Number of crimes”, low = “white”, high = “steelblue”) + theme_bw() + ggtitle(“Crimes by time of day”) + theme(panel.grid.major=element_line(colour=NA), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=df4$crime, y=df4$`Occurrence Hour`)) + geom_tile(aes(fill=count)) + scale_x_discrete(“Crime”, expand = c(0,0)) + scale_y_discrete(“Time of day”, expand = c(0,-2)) + scale_fill_gradient(“Number of crimes”, low = “white”, high = “steelblue”) + theme_bw() + ggtitle(“Crimes by time of day”) + theme(panel.grid.major=element_line(colour=NA), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=count)) + scale_x_discrete(“Crime”, expand = c(0,0)) + scale_y_discrete(“Time of day”, expand = c(0,-2)) + scale_fill_gradient(“Number of crimes”, low = “white”, high = “steelblue”) + theme_bw() + ggtitle(“Crimes by time of day”) + theme(panel.grid.major=element_line(colour=NA), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp$Crime<-as.factor(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
str(temp)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
str(temp)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.factor(temp$Crime)
str(temp)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.factor(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.factor(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.factor(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.factor(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
temp$Crime<-as.numeric(temp$Crime)
class(Crime)
class(temp$Crime)
temp <- aggregate(df4$crime, by= list(df4$crime, df4$`Occurrence Hour`), FUN=length)
names(temp) <- c("Crime", "Occurrence Hour", "Count")
temp$Crime<-as.numeric(temp$Crime)
ggplot(temp, aes(x=temp$Crime, y=temp$`Occurrence Hour`)) + geom_tile(aes(fill=Count) + scale_x_discrete("Crime", expand = c(0,0)) + scale_y_discrete("Time of day", expand = c(0,-2)) + scale_fill_gradient("Number of crimes", low = "white", high = "steelblue") + theme_bw() + ggtitle("Crimes by time of day") + theme(panel.grid.major=element_line(colour=NA)), panel.grid.minor=element_line (colour = NA))
crimetyp<-data.frame(table(df4$crime.type))
crimetyp$Percent <- round(ave(crimetyp$Freq,FUN=function(x) 100*x/sum(x)))
colnames(crimetyp) <- c("Crime Type","Freq","Percent")
sumcrimetyp <- sum(crimetyp$Freq)
#sumcrimetyp
crimetyp
rmarkdown::paged_table
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=7, fig.height=5, df_print=paged)
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=7, fig.height=5)
# Creating a vector of packages used within.
packages <- c('readxl',
'lubridate',
'ggplot2',
'tidyvere',
'dplyr')
# Checking for package installations on the system and installing if not found.
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
# Including the packages for use.
for(package in packages){
library(package, character.only = TRUE)
}
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=7, fig.height=5)
# Creating a vector of packages used within.
packages <- c('readxl',
'lubridate',
'ggplot2',
'tidyvere',
'dplyr')
# Checking for package installations on the system and installing if not found.
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
# Including the packages for use.
for(package in packages){
library(package, character.only = TRUE)
}
knitr::opts_chunk$set(echo = TRUE, include=FALSE, comment=NA,fig.keep='all', fig.width=7, fig.height=5)
# Creating a vector of packages used within.
packages <- c('readxl',
'lubridate',
'ggplot2',
'tidyverse',
'dplyr')
# Checking for package installations on the system and installing if not found.
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())))
}
# Including the packages for use.
for(package in packages){
library(package, character.only = TRUE)
}
```
View(crimes2)
